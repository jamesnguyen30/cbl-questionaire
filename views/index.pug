extends layout

block script
  script. 

    var counter = 0;
    var previousCheckedId = "" 

    window.onload = function(){
    }

    function changeToSelectedColor(id){
      var choiceElement = document.getElementById(id) 
      if(choiceElement.style.backgroundColor == "rgb(46, 174, 255)"){
        choiceElement.style.backgroundColor = "white"
      } else {
        choiceElement.style.backgroundColor = "rgb(46, 174, 255)"
      }
    }

    function checkButtonClicked(id){
      responseInput = document.getElementById(id).childNodes[0]
      if(responseInput.checked==true){
        responseInput.checked = false 
      } else {
        responseInput.checked = true
      }
    }

    function radioButtonClicked(id){
      var responseInput = document.getElementById(id).childNodes[0];
      responseInput.checked = true
    }

    // function createEmptyResponseAlert(){
      // parentContainer = document.getElementById("parent_container")

      // var alertDiv = document.createElement("div")
      // alertDiv.classList.add("alert")
      // alertDiv.classList.add("alert-warning")
      // alertDiv.classList.add("alert-dismissable")
      // alertDiv.classList.add("fade")
      // alertDiv.classList.add("show")
      // alertDiv.classList.add("cbl-warning")
      // var alertHeading = document.createElement("h7")
      // alertHeading = document.createTextNode("Error: this question cannot be empty")

      // alertDiv.appendChild(alertHeading)
      // parentContainer.insertBefore(alertDiv, parentContainer.childNodes[0])
    // }

block content
    container-fluid(id="parent_container" style="min-width: 100wh; position: relative")
    .carousel.slide(data-ride="carousel" id="carouseIndicators", data-interval="false", data-wrap = "false" style="padding-top: 30px; text-align: center; max-width: 1000px;margin-left: auto; margin-right: auto")
      ol.carousel-indicators
        each _, count in Array(questions.length + 1) 
          if count == 0
            li.active(data-target="#carouseIndicators" data-slide-to="0")
          else
            li(data-target="#carouseIndicators" data-slide-to=count)
      .carousel-inner(style="margin:10px;" )
        form(action="/responseSubmit" method="post")
          .carousel-item.active
            .cbl-question-jumbotron(style="height: 80vh")
                .cbl-question(style="margin-left: 50px; margin-right: 50px;")
                  .container-fluid(style="margin-top:50px;")
                    h1 This is a COVID 19 assessment tool
                    br
                    h6 Visit our Computational Biomedicine Lab homepage 
                    a(href='https://uh.edu/cbl/') Computational Biomedicine Lab
                    br
                    br
                    h5 This tool will help you assess your symptoms and determine if you're a good candidate for a coronavirus disease 2019 (COVID-19) test in your home community  
                    br
                    h5 Information about COVID-19 is constantly changing. And the level of COVID-19 activity varies by community, as does the availability of testing. For current updates on COVID-19 and details on testing and other health measures in your state, check with your local public health agency and visit the CDC website at : 
                    a(href="https://www.cdc.gov/") Center for Disease Control
          each question, question_index in questions
            .carousel-item
              .cbl-question-jumbotron(style="min-height: 80vh")
                  .cbl-question(style="margin-left: 50px; margin-right: 50px;")
                      h1(style="margin-top: 30px")= question.question
                  .cbl-response(id="response")
                      if question.question_type == 0
                        h6 You can pick multiple answers
                        fieldset
                          each response,index in question.responses
                            .form-group
                              .form-check.cbl-choice(id="ques" + question_index + "_res" + index onclick="checkButtonClicked('ques" + question_index + "_res" + index + "')")
                                input.form-check-input.cbl-check(type="checkbox" name="question_" + question_index  value="response_" + index)
                                label.form-check-label= response.response
                      if question.question_type == 1 
                        h6 You can only pick one answer 
                        fieldset
                          if question.responses.length > 5
                            .form-group.cbl-select
                              select.form-control(name="question_" + question_index)
                                option(selected) Select 
                                  each response,index in question.responses
                                    option(value="response_" + index)= response.response
                          else
                            each response,index in question.responses
                              .form-group
                                // .form-check.cbl-choice(id="ques" + question_index + "_res" + index onclick="radioButtonClicked('ques" + question_index + "_res" + index + "')")
                                .form-check.cbl-choice(id="ques" + question_index + "_res" + index onclick="radioButtonClicked('ques" + question_index + "_res" + index + "')")
                                  input.form-check-input.cbl-check(type="radio" name="question_" + question_index  value="response_" + index)
                                  label.form-check-label= response.response
          .carousel-item
            .cbl-question-jumbotron(style="height: 80vh")
              .cbl-question(style="margin-left: 50px; margin-right: 50px;")
                h1(style="margin-top: 30px") Thank you for your response !!!
                br
                h6 Your data will be saved anonymously and will not be sold to any third-party  
              .cbl-response(id="response")
                button.btn.btn-primary(type="submit") Submit Response

        a.page-prev-button.btn.btn-primary(href="#carouseIndicators" role="button" data-slide="prev")
            span < Previous

        a.page-next-button.btn.btn-primary(href="#carouseIndicators" id = "next_slide" role="button" data-slide="next")
            span Next >

